#!/usr/bin/env python
# -*- coding: utf-8 -*-

import telebot
import time, datetime
import paramiko
from telebot import types


API_TOKEN = "XXXXXXXXXX:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"     # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
user_id = 000000000     # id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
no_admin_enabled = False    #–≤—Ö–æ–¥ —Å –ª—é–±–æ–≥–æ user_id
active_tunnel = False       #—Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç—É–Ω–Ω–µ–ª—è


'''
USER STATES | —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
0 = —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞ / –∑–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏
1 = –≤–≤–æ–¥ –∏–º–µ–Ω–∏
2 = –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ / –∑–∞–ø—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ SSH(—Ö–æ—Å—Ç|ip)
3 = –≤–≤–æ–¥ –∏–º—è —Ö–æ—Å—Ç–∞|ip-–∞–¥—Ä–µ—Å SSH
4 = –≤–≤–æ–¥ –ø–æ—Ä—Ç SSH
5 = –≤–≤–æ–¥ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è SSH
6 = –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è SSH / –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
7 = –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è IPSec –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
8 = –≤–≤–æ–¥ –∏–º—è —Ö–æ—Å—Ç–∞|ip IPSec
9 = –≤–≤–æ–¥ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
10 = –≤–≤–æ–¥ ip-–∞–¥—Ä–µ—Å –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏
11 = –≤–≤–æ–¥ ip-–∞–¥—Ä–µ—Å —É–¥–∞–ª–µ–Ω–Ω–æ–π —Å–µ—Ç–∏
12 = –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö / –¥–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è 
'''

#paramico
host = ''
port = ''
user = ''
passw = ''

#script
namevpn = ''
servervpn = ''
keyvpn = ''
subnetvpn = ''
lanvpn = ''

state = 0   # "—Å—Ç–∞—Ä—Ç–æ–≤–æ–µ" c–æ—Å—Ç–æ—è–Ω–∏–µ    //7 –¥–ª—è Debug IPSec
bot = telebot.TeleBot(API_TOKEN)

@bot.message_handler(commands=["start"])
def cmd_start(message):
    global state
    if (user_id == message.chat.id) or (no_admin_enabled):  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∏—à–µ—Ç –∏–º–µ–Ω–Ω–æ –≤–ª–∞–¥–µ–ª–µ—Ü
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –ë–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ üòä\n–ö–∞–∫ —è –º–æ–≥—É –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")
        state = 1
        print(state)
    else:
        bot.send_message(message.from_user.id, "–í –¥–µ—Ç—Å—Ç–≤–µ –º–Ω–µ –≥–æ–≤–æ—Ä–∏–ª–∏, —á—Ç–æ –ø–ª–æ—Ö–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞–º ...\n–ü—Ä–æ—Å—Ç–∏—Ç–µüòÖ")
        print('Not registered detected')



@bot.message_handler(commands=["settings"])
def cmd_settings(message):
    global state
    if (user_id == message.chat.id) or (no_admin_enabled):
        bot.send_message(message.chat.id, "–ß—Ç–æ –∂, –¥–∞–≤–∞–π c –Ω–∞—á–∞–ª–∞.\n–í–≤–µ–¥–∏ –∏–º—è —Ö–æ—Å—Ç–∞ –∏–ª–∏ IP-–∞–¥—Ä–µ—Å : ")
        state = 3
        print(state)



@bot.message_handler(commands=["help"])         #–ø–æ–º–æ—â—å
def help(message):
    global state
    if (user_id == message.chat.id) or (no_admin_enabled):
        print("help to user")
        print(state)
        bot.send_message(message.chat.id,"–í–æ—Ç –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã :\n/help - –í—ã–∑–≤–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é\n/start - –°—Ç–µ—Ä–µ—Ç—å –º–Ω–µ –ø–∞–º—è—Ç—å –∏ –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞\n/settings - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n/create - –°–æ–∑–¥–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å IPSec\n/terminate - –†–∞–∑–æ—Ä–≤–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å IPSec\n/about - –û–± –ê–≤—Ç–æ—Ä–µ")


@bot.message_handler(commands=["about"])        # :)
def cmd_about(message):
    global state
    bot.send_message(message.chat.id, "–ú–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è –∑–æ–≤—É—Ç ********, –≤–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ–≥–æ :\nt.me/*********")
    print(state)


@bot.message_handler(commands=["ipsec"])
def cmd_ipsec(message):
    global state
    if (user_id == message.chat.id) or (no_admin_enabled):
        if state < 7:
            bot.send_message(message.chat.id, "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–µ –Ω–∞–π–¥–µ–Ω–æ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.\n/settings - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
            print(state)
        else:
            bot.send_message(message.chat.id, "–ß—Ç–æ –∂, –¥–∞–≤–∞–π c –Ω–∞—á–∞–ª–∞.\n–ò–º—è IPSec –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è : ")
            state = 7
            print(state)

@bot.message_handler(commands=["create"])
def cmd_create(message):
    global state
    global active_tunnel
    global client
    global chan
    print(active_tunnel)
    if (user_id == message.chat.id) or (no_admin_enabled):
        if state < 7:
            bot.send_message(message.chat.id, "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–µ –Ω–∞–π–¥–µ–Ω–æ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.\n/settings - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
            print(state)
        elif state >= 7 and state < 12:
            bot.send_message(message.chat.id,"–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\n/settings - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n/ipsec - —ç—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IPSec")
            print(state)
        elif state >= 12:
            if not active_tunnel :
                bot.send_message(message.chat.id, "–°–æ–∑–¥–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å.")
                bot.send_message(message.chat.id, "–û–∂–∏–¥–∞–π—Ç–µ...")

                print('–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∏ —Å–æ–∑–¥–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å')

                '''
                                #–∫–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Paramico
                '''
                client.connect(hostname=host, username=user, password=passw, port=port)     # –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å
                chan = client.invoke_shell()  # –æ—Ç–∫—Ä—ã–ª–∏ —Å–æ–∫–µ—Ç
                time.sleep(2)
                print("–û—Ç–∫—Ä—ã–ª–∏ —Å–æ–∫–µ—Ç!")
                chan.send('access-list _WEBADMIN_IPSEC_' + namevpn + ' \n')
                chan.send('permit ip ' + lanvpn + ' 255.255.255.0 ' + subnetvpn + ' 255.255.255.0\n')
                chan.send('exit\n')
                time.sleep(0.4)
                chan.send('crypto ike key ' + namevpn + ' ' + keyvpn + ' email *************@example.com\n')
                chan.send('crypto ike proposal ' + namevpn + ' \n')
                chan.send('encryption des\n')
                chan.send('encryption aes-cbc-128\n')
                chan.send('encryption 3des\n')
                chan.send('dh-group 1\n')
                chan.send('integrity md5\n')
                chan.send('integrity sha1\n')
                chan.send('exit \n')
                time.sleep(0.4)
                chan.send('crypto ike policy ' + namevpn + ' \n')
                chan.send('proposal ' + namevpn + ' \n')
                chan.send('lifetime 3600 \n')
                chan.send('mode ikev2 \n')
                chan.send('exit \n')
                time.sleep(0.4)
                chan.send('crypto ipsec transform-set ' + namevpn + ' \n')
                chan.send('cypher esp-des\n')
                chan.send('cypher esp-3des\n')
                chan.send('cypher esp-aes-128\n')
                chan.send('hmac esp-md5-hmac\n')
                chan.send('hmac esp-sha1-hmac\n')
                chan.send('dh-group 1 \n')
                chan.send('lifetime 3600 \n')
                chan.send('exit \n')
                time.sleep(0.4)
                chan.send('crypto ipsec profile ' + namevpn + ' \n')
                chan.send('dpd-interval 30 \n')
                chan.send('identity-local email *************@example.com \n')
                chan.send('match-identity-remote email *************@example.com \n')
                chan.send('authentication-local pre-share \n')
                chan.send('mode tunnel \n')
                chan.send('policy ' + namevpn + ' \n')
                chan.send('exit \n')
                time.sleep(0.4)
                chan.send('crypto map ' + namevpn + ' \n')
                chan.send('set-peer ' + servervpn + ' \n')
                chan.send('set-profile ' + namevpn + ' \n')
                chan.send('set-transform ' + namevpn + ' \n')
                chan.send('match-address _WEBADMIN_IPSEC_' + namevpn + ' \n')
                chan.send('set-tcpmss pmtu \n')
                chan.send('connect \n')
                time.sleep(1.5)
                chan.send('nail-up \n')
                chan.send('reauth-passive \n')
                chan.send('virtual-ip no enable \n')
                time.sleep(2.5)
                chan.send('enable \n')
                time.sleep(2.5)
                chan.send('enable \n')
                chan.send('exit \n')
                chan.send('exit \n')
                # chan.send('system configuration save \n')
                # –≤ —Ç–µ—Å—Ç–æ–≤–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –Ω–µ—Ç —Å–º—ã—Å–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —ç–Ω–µ—Ä–≥–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º—É—é –ø–∞–º—è—Ç—å
                client.close()      #   –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å
                time.sleep(1)
                bot.send_message(message.chat.id, "–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æüòå\n–†–∞–±–æ—Ç–∞—é –Ω–∞–¥ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º ...")
                time.sleep(10)
                #client.connect(hostname=host, username=user, password=passw, port=port)  # –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å
                #chan = client.invoke_shell()  # –æ—Ç–∫—Ä—ã–ª–∏ —Å–æ–∫–µ—Ç
                #time.sleep(1)
                #chan.send('crypto map ' + namevpn + ' \n')
                #chan.send('enable \n')
                #time.sleep(1.5)
                #chan.send('exit \n')
                #chan.send('exit \n')
                #client.close()      #   –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å
                print(state)
                active_tunnel = True
                bot.send_message(message.chat.id, "–¢—É–Ω–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω! –¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –ª–æ–∫–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∞ —Å —Å–µ—Ç—å—é "+servervpn+"")
                time.sleep(2)
                bot.send_message(message.chat.id, "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è üòé")
            else:
                bot.send_message(message.chat.id, "–£–∂–µ –∏–º–µ–µ–º —Ç—É–Ω–Ω–µ–ª—å üòé\n–õ–æ–∫–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∞ —Å —Å–µ—Ç—å—é "+servervpn+"")
                print('–£–∂–µ –∏–º–µ–µ–º —Ç—É–Ω–Ω–µ–ª—å')
                print(state)
        else:
            bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞...")
            print('–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞...')
            print(state)

@bot.message_handler(commands=["terminate"])
def cmd_terminate(message):
    global state
    global active_tunnel
    global client
    global chan
    print(active_tunnel)
    if (user_id == message.chat.id) or (no_admin_enabled):
        if state < 7:
            bot.send_message(message.chat.id, "–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–µ –Ω–∞–π–¥–µ–Ω–æ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.\n/settings - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
            print(state)
        elif state >= 7 and state < 12:
            bot.send_message(message.chat.id,"–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\n/settings - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n/ipsec - —ç—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IPSec")
            print(state)
        elif state >= 12:
            if active_tunnel :
                bot.send_message(message.chat.id, "–†–∞–∑—Ä—ã–≤–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å.")
                bot.send_message(message.chat.id, "–û–∂–∏–¥–∞–π—Ç–µ...")
                print('–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∏ —Ä–∞–∑—Ä—ã–≤–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å')

                '''
                            #–∫–æ–¥ —Ä–∞–∑—Ä—ã–≤–∞ Paramico    
                '''
                client.connect(hostname=host, username=user, password=passw, port=port)  # –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å
                chan = client.invoke_shell()  # –æ—Ç–∫—Ä—ã–ª–∏ —Å–æ–∫–µ—Ç
                time.sleep(1)
                print("–û—Ç–∫—Ä—ã–ª–∏ —Å–æ–∫–µ—Ç!")
                print('STOP TUNNEL')
                chan.send('no access-list _WEBADMIN_IPSEC_' + namevpn + ' \n')
                chan.send('no crypto ike key ' + namevpn + ' \n')
                chan.send('no crypto ike proposal ' + namevpn + ' \n')
                chan.send('no crypto ike policy ' + namevpn + ' \n')
                chan.send('no crypto ipsec transform-set ' + namevpn + ' \n')
                chan.send('no crypto ipsec profile ' + namevpn + ' \n')
                chan.send('no crypto map ' + namevpn + ' \n')
                chan.send('\n')
                # chan.send('system configuration save \n')
                print('STOPPED')
                time.sleep(1)
                client.close()  # –æ—Ç–∫–ª—é—á–∏–ª–∏—Å—å
                print(state)
                active_tunnel = False
                bot.send_message(message.chat.id,"–¢—É–Ω–Ω–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç!")
                time.sleep(1.5)
                bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ üòå")
            else:
                bot.send_message(message.chat.id, "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç—É–Ω–Ω–µ–ª—è\n–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–∫–ª—é—á–∏—Ç—å —Ç–æ, —á–µ–≥–æ –Ω–µ—Ç ü§∑‚Äç‚ôÄ")
                print('–ù–µ—á–µ–≥–æ —Ä–∞–∑—Ä—ã–≤–∞—Ç—å ')
                print(state)
        else:
            bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞...")
            print('–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞...')
            print(state)




@bot.message_handler(func=lambda message: state == 1)
def user_entering_name(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global username
        username = message.text
        username = username.strip()
        # –í —Å–ª—É—á–∞–µ —Å –∏–º–µ–Ω–µ–º –Ω–µ –±—É–¥–µ–º –Ω–∏—á–µ–≥–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —ç—Ç–æ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –¥–æ–ø. –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
        bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ–µ –∏–º—è, "+username+", –û—á–µ–Ω—å –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!\n–ê –º–µ–Ω—è —Å–æ–∑–¥–∞–ª –æ–¥–∏–Ω –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º —Å–æ–∑–¥–∞–≤–∞—Ç—å IPSec VPN —Ç—É–Ω–Ω–µ–ª–∏ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π, —è –º–æ–≥—É —Ç–µ–±–µ —Å —ç—Ç–∏–º –ø–æ–º–æ—á—å.")
        bot.send_message(message.from_user.id,"–î–∞–≤–∞–π –æ—Ç–∫—Ä–æ–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –∏ –∑–∞–ø–æ–ª–Ω–∏–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–∏—Å—Ç–µ–º–µ.\n–û—Ç–ø—Ä–∞–≤—å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å üòâ")
        state = 2
        print(state)

@bot.message_handler(func=lambda message: state == 2)
def user_entering_host_msg(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        buf = message.text
        bot.send_message(message.from_user.id,"–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ SSH –≤–≤–µ–¥–∏ –ò–º—è —Ö–æ—Å—Ç–∞ –∏–ª–∏ IP-–∞–¥—Ä–µ—Å : ")
        state = 3
        print(state)

@bot.message_handler(func=lambda message: state == 3)
def user_entering_host(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global host
        host = message.text
        host = host.strip()
        bot.send_message(message.from_user.id,"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –ø–æ—Ä—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (Port) : ")
        state = 4
        print(state)

@bot.message_handler(func=lambda message: state == 4)
def user_entering_port(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global port
        # –ê –≤–æ—Ç —Ç—É—Ç —Å–¥–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
        if not message.text.isdigit():
            # –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –º–µ–Ω—è–µ–º, –ø–æ—ç—Ç–æ–º—É —Ç–æ–ª—å–∫–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –∂–¥—ë–º –¥–∞–ª—å—à–µ
            bot.send_message(message.chat.id, "–ü–æ—Ä—Ç —ç—Ç–æ —á–∏—Å–ª–æ 0 - 65535.")
            return
        # –ù–∞ –¥–∞–Ω–Ω–æ–º —ç—Ç–∞–ø–µ –º—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ message.text –º–æ–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ, –ø–æ—ç—Ç–æ–º—É –Ω–∏—á–µ–º –Ω–µ —Ä–∏—Å–∫—É–µ–º
        if int(message.text) < 1 or int(message.text) > 65535:
            bot.send_message(message.chat.id, "–ö–∞–∫–æ–π-—Ç–æ —Å—Ç—Ä–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç, " + username + ". –ü—Ä–æ–≤–µ—Ä—å –µ—â–µ —Ä–∞–∑! –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 0 - 65535.")
            return
        else:
            port = message.text
            port = port.strip()
            # –ü–æ—Ä—Ç –≤–≤–µ–¥—ë–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –º–æ–∂–Ω–æ –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ
        bot.send_message(message.from_user.id,"–û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ.\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è : ")
        state = 5
        print(state)

@bot.message_handler(func=lambda message: state == 5)
def user_entering_sshuser(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global host
        global port
        global user
        global username
        user = message.text
        user = user.lower()
        user = user.strip()
        bot.send_message(message.from_user.id, "–î–∞–≤–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"+user+"@"+host+":"+port+"\n\n–ï—Å–ª–∏ —Ç—ã –≥–¥–µ —Ç–æ –≤–∏–¥–∏—à—å –æ—à–∏–±–∫—É –≤ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–∂–º–∏ /settings - —ç—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—â—ë —Ä–∞–∑.\n–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ –¥–∞–≤–∞–π –≤–≤–µ–¥—ë–º –ø–∞—Ä–æ–ª—å : ")
        state = 6
        print(state)

@bot.message_handler(func=lambda message: state == 6)
def user_entering_password(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global passw
        global client
        global chan
        passw = message.text
        passw = passw.strip()
        buf = len(passw)
        hide = '*'*buf
        bot.send_message(message.from_user.id, "–ü—ã—Ç–∞—é—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è... \n"+user+"@"+host+":"+port+" "+hide+"")
        try:
            client.connect(hostname=host, username=user, password=passw, port=port)
        except TimeoutError:
            bot.send_message(message.from_user.id, "–û—á–µ–Ω—å –¥–æ–ª–≥–æ üòî\n–ú–æ—è –ø–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –±—ã–ª–∞ –±–µ–∑—É—Å–ø–µ—à–Ω–æ–π, —Ç.–∫. –æ—Ç –¥—Ä—É–≥–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∑–∞ —Ç—Ä–µ–±—É–µ–º–æ–µ –≤—Ä–µ–º—è –Ω–µ –ø–æ–ª—É—á–µ–Ω –Ω—É–∂–Ω—ã–π –æ—Ç–∫–ª–∏–∫, –∏–ª–∏ –±—ã–ª–æ —Ä–∞–∑–æ—Ä–≤–∞–Ω–æ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–∑-–∑–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞ —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞!")
            print("–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –±—ã–ª–∞ –±–µ–∑—É—Å–ø–µ—à–Ω–æ–π, —Ç.–∫. –æ—Ç –¥—Ä—É–≥–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∑–∞ —Ç—Ä–µ–±—É–µ–º–æ–µ –≤—Ä–µ–º—è –Ω–µ –ø–æ–ª—É—á–µ–Ω –Ω—É–∂–Ω—ã–π –æ—Ç–∫–ª–∏–∫, –∏–ª–∏ –±—ã–ª–æ —Ä–∞–∑–æ—Ä–≤–∞–Ω–æ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–∑-–∑–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ –æ—Ç–∫–ª–∏–∫–∞ —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞!")
            time.sleep(1)
            bot.send_message(message.from_user.id,"–ù–∞ —Ç–≤–æ—ë–º –º–µ—Å—Ç–µ —è –±—ã –µ—â–µ —Ä–∞–∑ –≤—Å—ë –ø—Ä–æ–≤–µ—Ä–∏–ª.\n\n"+user+"@"+host+":"+port+" "+hide+"\n\n–ò—Å–ø–æ–ª—å–∑—É–π /settings - –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        except paramiko.ssh_exception.AuthenticationException:
            bot.send_message(message.from_user.id, "–û—à–∏–±–∫–∞ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ üò¨\n–í–æ–∑–º–æ–∂–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞.\n–ò—Å–ø–æ–ª—å–∑—É–π /settings - –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n–ò–ª–∏ –ø–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å –µ—â—ë —Ä–∞–∑ : ")
            print("Authentication failed!")
        except paramiko.ssh_exception.NoValidConnectionsError:
            bot.send_message(message.from_user.id,"–ù–µ –º–æ–≥—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ—Ä—Ç—É '"+port+"'\n–ò—Å–ø–æ–ª—å–∑—É–π /settings - –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
            print("Unable to connect to port!")
        except:
            bot.send_message(message.from_user.id,"–ß—Ç–æ-—Ç–æ —Å–æ –º–Ω–æ–π –Ω–µ —Ç–∞–∫ üò∞\n–ò—Å–ø–æ–ª—å–∑—É–π /settings - –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.\n–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ...")
            print("Something wrong...")
        else:
            print("No error found:")
            chan = client.invoke_shell()  # –æ—Ç–∫—Ä—ã–ª–∏ —Å–æ–∫–µ—Ç
            bot.send_message(message.from_user.id, "–ü–æ–¥–∫–ª—é—á–µ–Ω–æ üòé\n–°–æ–∑–¥–∞–¥–∏–º IPSec —Ç—É–Ω–Ω–µ–ª—å.")
            print("–ü–æ–¥–∫–ª—é—á–µ–Ω–æ!")
            bot.send_message(message.from_user.id, "–ò–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è IPSec : ")
            state = 7
            print(state)
        finally:
            client.close()      #–∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
            print("Thanks for Using ¬© Andrew Denisow 2019")


@bot.message_handler(func=lambda message: state == 7)
def user_entering_namevpn(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global namevpn
        namevpn = message.text
        namevpn = namevpn.strip()
        bot.send_message(message.from_user.id,"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –ò–º—è —Ö–æ—Å—Ç–∞ –∏–ª–∏ IP-–∞–¥—Ä–µ—Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ : ")
        state = 8
        print(state)

@bot.message_handler(func=lambda message: state == 8)
def user_entering_servervpn(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global servervpn
        servervpn = message.text
        servervpn = servervpn.lower()
        servervpn = servervpn.strip()
        bot.send_message(message.from_user.id,"–°–µ–∫—Ä–µ–Ω—ã–π –∫–ª—é—á : ")
        state = 9
        print(state)

@bot.message_handler(func=lambda message: state == 9)
def user_entering_keyvpn(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global keyvpn
        if len(message.text) < 8 :
            bot.send_message(message.from_user.id,"–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∫–ª—é—á! –í–≤–µ–¥–∏ –Ω–µ –º–µ–Ω–µ–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ : ")
            return
        else:
            keyvpn = message.text
            keyvpn = keyvpn.strip()
            bot.send_message(message.from_user.id,"–ï—â—ë —á—É—Ç—å-—á—É—Ç—å.\n–í–≤–µ–¥–∏ IP-–∞–¥—Ä–µ—Å –õ–û–ö–ê–õ–¨–ù–û–ô –ø–æ–¥—Å–µ—Ç–∏ : \n–ü–æ–º–Ω–∏ —ç—Ç–æ –ø–æ–¥—Å–µ—Ç—å, –Ω–∞ –∫–æ–Ω—Ü–µ '0'")
            state = 10
            print(state)

@bot.message_handler(func=lambda message: state == 10)
def user_entering_lanvpn(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global lanvpn
        lanvpn = message.text
        lanvpn = lanvpn.strip()
        bot.send_message(message.from_user.id,"IP-–∞–¥—Ä–µ—Å –£–î–ê–õ–Å–ù–ù–û–ô –ø–æ–¥—Å–µ—Ç–∏ : \n–≠—Ç–æ —Ç–æ–∂–µ –ø–æ–¥—Å–µ—Ç—å, –Ω–∞ –∫–æ–Ω—Ü–µ '0'")
        state = 11
        print(state)

@bot.message_handler(func=lambda message: state == 11)
def user_entering_subnetvpn(message):
    if (user_id == message.chat.id) or (no_admin_enabled):

        global state
        global subnetvpn
        subnetvpn = message.text
        subnetvpn = subnetvpn.strip()
        bot.send_message(message.from_user.id, "–î–∞–≤–∞–π –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IPSec\n\n–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è : "+namevpn+"\n–£–¥–∞–ª–µ–Ω–Ω—ã–π —à–ª—é–∑ : "+servervpn+"\n–ö–ª—é—á PSK : "+keyvpn+"\nIP-–∞–¥—Ä–µ—Å –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ : "+lanvpn+"\nIP-–∞–¥—Ä–µ—Å —É–¥–∞–ª–µ–Ω–Ω–æ–π —Å–µ—Ç–∏ : "+subnetvpn+"\n\n–ï—Å–ª–∏ —Ç—ã –≥–¥–µ-—Ç–æ –≤–∏–¥–∏—à—å –æ—à–∏–±–∫—É –≤ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–∂–º–∏ /ipsec - —ç—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ IPSec –µ—â—ë —Ä–∞–∑.")
        bot.send_message(message.from_user.id,"–î–æ—Å—Ç—É–ø–Ω—ã –∫–æ–º–∞–Ω–¥—ã :\n/create - –°–æ–∑–¥–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å IPSec\n/terminate - –†–∞–∑–æ—Ä–≤–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å IPSec")
        state = 12
        print(state)
        print("–ì–æ—Ç–æ–≤—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å")






client = paramiko.SSHClient()
client.set_missing_host_key_policy(paramiko.AutoAddPolicy())

if __name__ == '__main__':
    while True:
        try:  # –¥–æ–±–∞–≤–ª—è–µ–º try –¥–ª—è –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω–æ–π —Ä–∞–±–æ—Ç—ã
            bot.polling(none_stop=True)  # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
        except:
            time.sleep(10)  # –≤ —Å–ª—É—á–∞–µ –ø–∞–¥–µ–Ω–∏—è
